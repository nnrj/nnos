
Allocating common symbols
Common symbol       size              file

_pt                 0x1000            main.o
_pgdir              0x1000            main.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x0000000000100000                . = 0x100000

.text           0x0000000000100000      0x734
                0x0000000000100000                code = .
                0x0000000000100000                _code = .
                0x0000000000100000                __code = .
 *(.text)
 .text          0x0000000000100000       0x2c kernel.o
                0x0000000000100000                _mboot
                0x0000000000100020                _start
 .text          0x000000000010002c       0x70 main.o
                0x000000000010002c                _kernel_main
 .text          0x000000000010009c      0x244 common.o
                0x000000000010009c                _outb
                0x00000000001000bb                _inb
                0x00000000001000d8                _inw
                0x00000000001000f7                _memcpy
                0x000000000010012f                _memset
                0x000000000010015f                _strcmp
                0x0000000000100202                _strcpy
                0x000000000010022b                _panic
                0x0000000000100285                _panic_assert
 .text          0x00000000001002e0      0x454 monitor.o
                0x00000000001003f7                _monitor_put
                0x0000000000100516                _monitor_clear
                0x000000000010056d                _monitor_write
                0x00000000001005ac                _monitor_write_hex
                0x000000000010065e                _monitor_write_dec

.rodata         0x0000000000101000        0x0
                0x0000000000101000                rodata = .
                0x0000000000101000                _rodata = .
                0x0000000000101000                __rodata = .
 *(.rodata)

.rdata          0x0000000000100734       0x50
 .rdata         0x0000000000100734       0x28 main.o
 .rdata         0x000000000010075c       0x24 common.o
 .rdata         0x0000000000100780        0x4 monitor.o

.rdata$zzz      0x0000000000100784       0x3c
 .rdata$zzz     0x0000000000100784       0x14 main.o
 .rdata$zzz     0x0000000000100798       0x14 common.o
 .rdata$zzz     0x00000000001007ac       0x14 monitor.o

.data           0x0000000000101000        0x4
                0x0000000000101000                data = .
                0x0000000000101000                _data = .
                0x0000000000101000                __data = .
 *(.data)
 .data          0x0000000000101000        0x0 kernel.o
 .data          0x0000000000101000        0x0 main.o
 .data          0x0000000000101000        0x0 common.o
 .data          0x0000000000101000        0x4 monitor.o
                0x0000000000101000                _video_memory

.drectve        0x0000000000101004       0x2c
 .drectve       0x0000000000101004       0x2c main.o

.bss            0x0000000000102000     0x2004
                0x0000000000102000                bss = .
                0x0000000000102000                _bss = .
                0x0000000000102000                __bss = .
 *(COMMON)
 COMMON         0x0000000000102000     0x2000 main.o
                0x0000000000102000                _pt
                0x0000000000103000                _pgdir
 *(.bss)
 .bss           0x0000000000104000        0x0 kernel.o
 .bss           0x0000000000104000        0x0 main.o
 .bss           0x0000000000104000        0x0 common.o
 .bss           0x0000000000104000        0x4 monitor.o
                0x0000000000104000                _cursor_x
                0x0000000000104001                _cursor_y
                0x0000000000104004                end = .
                0x0000000000104004                _end = .
                0x0000000000104004                __end = .
LOAD kernel.o
LOAD main.o
LOAD common.o
LOAD monitor.o
OUTPUT(kernel.elf elf32-i386)

.debug_info     0x0000000000000000      0x8de
 .debug_info    0x0000000000000000      0x164 main.o
 .debug_info    0x0000000000000164      0x3d8 common.o
 .debug_info    0x000000000000053c      0x3a2 monitor.o

.debug_abbrev   0x0000000000000000      0x231
 .debug_abbrev  0x0000000000000000       0x78 main.o
 .debug_abbrev  0x0000000000000078       0xc5 common.o
 .debug_abbrev  0x000000000000013d       0xf4 monitor.o

.debug_loc      0x0000000000000000      0x3a0
 .debug_loc     0x0000000000000000       0x38 main.o
 .debug_loc     0x0000000000000038      0x1e0 common.o
 .debug_loc     0x0000000000000218      0x188 monitor.o

.debug_aranges  0x0000000000000000       0x60
 .debug_aranges
                0x0000000000000000       0x20 main.o
 .debug_aranges
                0x0000000000000020       0x20 common.o
 .debug_aranges
                0x0000000000000040       0x20 monitor.o

.debug_macro    0x0000000000000000     0x7d64
 .debug_macro   0x0000000000000000     0x29dc main.o
 .debug_macro   0x00000000000029dc     0x29c4 common.o
 .debug_macro   0x00000000000053a0     0x29c4 monitor.o

.debug_line     0x0000000000000000      0x252
 .debug_line    0x0000000000000000       0x6b main.o
 .debug_line    0x000000000000006b       0xd3 common.o
 .debug_line    0x000000000000013e      0x114 monitor.o

.debug_str      0x0000000000000000        0xe
 .debug_str     0x0000000000000000        0x0 main.o
 .debug_str     0x0000000000000000        0x0 common.o
 .debug_str     0x0000000000000000        0xe monitor.o

.debug_frame    0x0000000000000000      0x24c
 .debug_frame   0x0000000000000000       0x34 main.o
 .debug_frame   0x0000000000000034      0x124 common.o
 .debug_frame   0x0000000000000158       0xf4 monitor.o
